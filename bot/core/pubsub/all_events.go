// Generated by events_gen.go

package pubsub

import (
	"github.com/mitchellh/mapstructure"
)

const (
	EventAll           = "all"
	EventGetUser       = "get_user"
	EventGetMember     = "get_member"
	EventGetGuild      = "get_guild"
	EventGetPermission = "get_permission"
	EventSendMessage   = "send_message"
	EventGetConnected  = "get_connected"
	EventSetConnected  = "set_connected"
	EventResponse      = "response"
	EventFlushGuilds   = "flush_guilds"
	EventVoiceUpdate   = "voice_update"
)

var AllEvents = []string{
	EventGetUser,
	EventGetMember,
	EventGetGuild,
	EventGetPermission,
	EventSendMessage,
	EventGetConnected,
	EventSetConnected,
	EventResponse,
	EventFlushGuilds,
	EventVoiceUpdate,
}

func (event *EventData) GetUser() *ReceiveGetUser {
	var output ReceiveGetUser
	decoder, _ := mapstructure.NewDecoder(&mapstructure.DecoderConfig{
		Result:  &output,
		TagName: "json",
	})

	_ = decoder.Decode(event.Data)

	return &output
}

func (event *EventData) GetMember() *ReceiveGetMember {
	var output ReceiveGetMember
	decoder, _ := mapstructure.NewDecoder(&mapstructure.DecoderConfig{
		Result:  &output,
		TagName: "json",
	})

	_ = decoder.Decode(event.Data)

	return &output
}

func (event *EventData) GetGuild() *ReceiveGetGuild {
	var output ReceiveGetGuild
	decoder, _ := mapstructure.NewDecoder(&mapstructure.DecoderConfig{
		Result:  &output,
		TagName: "json",
	})

	_ = decoder.Decode(event.Data)

	return &output
}

func (event *EventData) GetPermission() *ReceiveGetPermission {
	var output ReceiveGetPermission
	decoder, _ := mapstructure.NewDecoder(&mapstructure.DecoderConfig{
		Result:  &output,
		TagName: "json",
	})

	_ = decoder.Decode(event.Data)

	return &output
}

func (event *EventData) SendMessage() *ReceiveSendMessage {
	var output ReceiveSendMessage
	decoder, _ := mapstructure.NewDecoder(&mapstructure.DecoderConfig{
		Result:  &output,
		TagName: "json",
	})

	_ = decoder.Decode(event.Data)

	return &output
}

func (event *EventData) GetConnected() *ReceiveGetConnected {
	var output ReceiveGetConnected
	decoder, _ := mapstructure.NewDecoder(&mapstructure.DecoderConfig{
		Result:  &output,
		TagName: "json",
	})

	_ = decoder.Decode(event.Data)

	return &output
}

func (event *EventData) SetConnected() *ReceiveSetConnected {
	var output ReceiveSetConnected
	decoder, _ := mapstructure.NewDecoder(&mapstructure.DecoderConfig{
		Result:  &output,
		TagName: "json",
	})

	_ = decoder.Decode(event.Data)

	return &output
}
